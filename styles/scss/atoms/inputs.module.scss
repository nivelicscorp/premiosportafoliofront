@import '../../scss/config/variables';
@import '../../scss/config/mixins';

.inputContainer {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%;
  input,
  select,
  textarea {
    padding: 1.8rem 0.5rem 1.2rem 2.2rem;
    font-family: Open Sans;
    border: 0.2rem solid map-get($grayscale, 'gray-30');
    background-color: map-get($grayscale, white);
    border-radius: 0.5rem;
    font-size: 1.6rem;
    display: block;
    width: auto;
  }
  select {
    background: url(../../../public/img/forms/select-arrow.svg) center right
      1rem no-repeat;
    background-size: 2rem;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
  }
  input {
    padding: 1.8rem 0.5rem 1.2rem 2.2rem;
    &::placeholder {
      color: map-get($grayscale, gray-25);
      font-weight: bold;
    }
  }

  input[type='file'] {
    color: map-get($grayscale, 'gray-30');
    background: url(../../../public/img/forms/upload-file.svg) right 1.2rem
      center no-repeat;
    background-size: 3.2rem;
    padding-right: 6rem;
    + svg {
      display: none;
    }
    &.error {
      background-color: map-get($alert, 'light');
      background-image: url(../../../public/img/forms/upload-file-error.svg);
      border-color: map-get($alert, 'base');
    }
  }
  input[type='file']::-webkit-file-upload-button {
    display: none;
  }

  input,
  select,
  textarea {
    &.error {
      border-color: map-get($alert, 'base');
      background-color: map-get($alert, 'light');
    }
    &.disabled {
      border-color: map-get($grayscale, 'gray-20');
      background-color: map-get($grayscale, 'gray-10');
    }
    &:focus {
      outline: none;
      background-color: map-get($grayscale, white);
      border-color: map-get($secondary, 'active');
    }
  }

  label.error {
    + select {
      border-color: map-get($alert, 'base');
      background-color: map-get($alert, 'light');
      background-image: url(../../../public/img/forms/select-arrow-error.svg);
    }
  }

  label {
    display: -webkit-box;
    position: absolute;
    font-size: 1.4rem;
    top: -1.5rem;
    left: 1.9rem;
    padding: 0.5rem 0.5rem 0;
    background: map-get($grayscale, White);
    line-height: 1.5;
    color: map-get($primary, dark);
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
    span {
      font-size: 0.8rem;
    }
    &.active {
      color: map-get($grayscale, 'gray-30');
    }
    &.error {
      background-image: linear-gradient(
        to top,
        map-get($alert, 'light') 50%,
        transparent 50%
      );
      color: map-get($alert, 'base');
      + input + button svg path {
        fill: map-get($alert, 'base');
      }
    }
    &.disabled {
      background-image: linear-gradient(
        to top,
        map-get($grayscale, 'gray-10') 50%,
        transparent 50%
      );
      color: map-get($grayscale, 'gray-20');
    }
  }

  .errorMessage {
    font-size: 1rem;
    padding: 0.5rem 2rem 0.5rem 1rem;
    position: absolute;
    border-radius: 0.8rem;
    max-width: 35rem;
    z-index: 10;
    top: -35%;
    right: -35%;
    background-color: #efefef;
    display: flex;
    align-items: center;
    &__text {
      span {
        color: map-get($primary, general);
      }
    }
    &__title {
      font-size: 1.2rem;
      color: map-get($alert, 'base');
      margin-right: 1rem;
    }
    &__closeButton {
      font-size: 0.8rem;
      height: 1.2rem;
      width: 1.2rem;
      z-index: 11;
      padding: 0;
      position: absolute;
      right: -33%;
      top: -30%;
      border-radius: 50%;
      background: map-get($grayscale, gray-40);
      color: map-get($grayscale, white);
      border: none;
      cursor: pointer;
    }
  }
  .checkbox {
    align-items: center;
    margin-top: 2rem;
    position: relative;
    width: fit-content;
    &__div,
    input {
      display: inline;
      vertical-align: middle;
    }
    &__div {
      font: 500 1.4rem / 2.2rem $font-primary;
      a {
        color: map-get($primary, general);
        text-decoration: underline;
      }
    }
    input {
      border-radius: 0.4rem;
      border-width: 0.15rem;
      appearance: none;
      height: 2rem;
      margin: 0 1rem 0 0;
      overflow: hidden;
      padding: 0;
      position: relative;
      width: 2rem;
      &:checked {
        border-color: map-get($primary, general);
        &::after {
          background: map-get($primary, general);
          border: 0.2rem solid map-get($grayscale, white);
          border-radius: 0.4rem;
          content: '';
          display: block;
          position: absolute;
          height: 100%;
          width: 100%;
        }
      }
    }
  }
  .insideButton {
    position: absolute;
    right: 1rem;
    top: 2rem;
    background: none;
    border: none;
    cursor: pointer;
  }

  .disabled {
    path {
      fill: map-get($primary, 'base');
    }
  }
  .main {
    path {
      fill: map-get($grayscale, 'gray-30');
    }
  }
}
